@model SignalRChat.Models.Api.SearchCriteriaModel

@section Scripts{
    @Scripts.Render("~/signalr/hubs")
    @Scripts.Render("Scripts/Home/ChatRoom.js")
}


@section Styles{
    @Styles.Render("~/Styles/chatstyle.css")
}

<h1>Chat Room</h1>

<div class="left-panel">
    <section>
        <h2> Chat log</h2>
        <div class="chatwindow">
            <ul data-bind="foreach: messageLog()">
                <li data-bind="text: username + ' (' + formattedTime() + ') : ' + content"></li>
            </ul>
            <div class="loader" data-bind="fadeVisible: isLoading()"></div>
        </div>
    </section>

    <section class="chat-header">
        <h2 class="visuallyhidden"> User and received message details </h2>
        <form data-bind="submit: setUsername">
            <label for="username-field">Username: </label>
            <input id="username-field" type="text" maxlength="20" data-bind="value: username, enable: isSettingUsername, hasFocus: isSettingUsername" placeholder="Username" required />
            <input type="submit" data-bind="value: setUsernameButtonLabel" />
        </form>
        <form data-bind="submit: sendMessage">
            <label for="content-field">Message: </label>
            <textarea rows="4" cols="50" class="content" data-bind="value: content, valueUpdate:'afterkeydown', enterkey: sendMessage, enable: !isSettingUsername(), hasFocus: !isSettingUsername(), attr: {placeholder: setMessagePlaceholderText}"> </textarea>
            <input type="submit" value="Send message" data-bind="disable: isSettingUsername" />
        </form>
        <form data-bind="submit: sendMessage">
            <label for="system-messages-field" class="system-messages-label">Receive messages from system admin? </label>
            <input id="system-messages-field" class="system-messages-input" type="checkbox" data-bind="checked: receiveSystemMessages" />
        </form>
    </section>
</div>

<div class="right-panel">
    <form data-bind="submit: toggleLoadOptionsVisible">
        <input type="submit" value="Toggle options" />
    </form>

    <section class="criteria-form" data-bind="slideIn: loadOptionsVisible">
        <h2> Message options </h2>
        <form data-bind="submit: loadMessages">
            <div>
                <label for="criteria-take">Number of messages to load:</label>
                <input id="criteria-take" type="number" class="number-input" data-bind="value: criteria().take" />
            </div>
            <div>
                <label for="criteria-time-length" class="dropdown-label-text">Load messages sent in the last:</label>
                <input id="criteria-time-length" type="number" class="dropdown-input-number" data-bind="value: criteria().timeLength" />
                @Html.EnumDropDownListFor(
                   o => o.TimeUnit,
                   null,
                   htmlAttributes: new { data_bind = "value: criteria().timeUnit", @class = "dropdown-input-dropdown" }
               )
            </div>
            <div>
                <label for="criteria-include-system" class="system-messages-label">Include system admin messages?</label>
                <input id="criteria-include-system" class="system-messages-input" type="checkbox" data-bind="checked: criteria().includeSystem" />
            </div>
            <div>
                <input type="submit" value="Load all messages" />
            </div>
        </form>
    </section>
</div>

